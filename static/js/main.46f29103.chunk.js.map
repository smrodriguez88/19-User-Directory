{"version":3,"sources":["utils/API.js","components/UserTable.js","components/Header.js","App.js","index.js"],"names":["getRandUsers","axios","get","Grid","useState","rowData","setRowData","isLoading","useEffect","then","results","console","log","data","newData","map","person","push","image","picture","medium","name","first","last","phone","email","dob","date","split","updateRowData","className","style","width","columnDefs","headerName","field","sortable","cellStyle","textAlign","cellRenderer","value","filter","defaultColDef","flex","resizable","whiteSpace","rowHeight","domLayout","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAMeA,MAJf,WACI,OAAOC,IAAMC,IAAI,6E,kBCoFNC,MAhFf,WAAgB,IAAD,EACmBC,qBADnB,mBACJC,EADI,KACKC,EADL,OAEuBF,qBAFvB,mBAEJG,EAFI,KA6DX,OA7DW,KAkBXC,qBAAU,WACNR,IAAeS,MAAK,SAAAC,GAClBC,QAAQC,IAAIF,EAAQG,KAAKH,SAhB/B,SAAuBG,GACnB,IAAIC,EAAU,GACdD,EAAKE,KAAI,SAACC,GACNF,EAAQG,KAAK,CACTC,MAAOF,EAAOG,QAAQC,OACtBC,KAAK,GAAD,OAAKL,EAAOK,KAAKC,MAAjB,YAA0BN,EAAOK,KAAKE,MAC1CC,MAAOR,EAAOQ,MACdC,MAAOT,EAAOS,MACdC,IAAKV,EAAOU,IAAIC,KAAKC,MAAM,KAAK,QAGxCtB,EAAWQ,GAMTe,CAAcnB,EAAQG,KAAKH,SAC3BC,QAAQC,IAAI,4BAEhB,CAACL,IAsCC,qBAAKuB,UAAU,6BAA6BC,MAAQ,CAAEC,MAAO,MAA7D,SACA,cAAC,cAAD,CACI3B,QAASA,EACT4B,WAvCW,CACf,CACIC,WAAY,QACZC,MAAO,QACPH,MAAO,IACPI,UAAU,EACVC,UAAW,CAACC,UAAW,UACvBC,aAAc,gBAAGC,EAAH,EAAGA,MAAH,yBAA2BA,EAA3B,SAElB,CACIN,WAAY,OACZC,MAAO,OACNH,MAAO,IACPS,QAAQ,GAEb,CACIP,WAAY,QACZC,MAAO,QACPH,MAAO,IACPS,QAAQ,GAEZ,CACIP,WAAY,QACZC,MAAO,QACPH,MAAO,IACPS,QAAQ,GAEZ,CACIP,WAAY,gBACZC,MAAO,MACPH,MAAO,IACPS,QAAQ,IASRC,cAAe,CACXC,KAAM,EACNC,WAAW,EACXR,UAAU,EACVC,UAAW,CAACQ,WAAY,WAE5BC,UAAW,GACXC,UAAW,kB,MClERC,MAXf,WAGI,OACI,sBAAKlB,UAAU,SAAf,UACI,gDACA,8GCKGmB,MAVf,WAEE,OACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJNoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.46f29103.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction getRandUsers() {\n    return axios.get(\"https://randomuser.me/api/?results=40&password=upper,lower,number&nat=us\");\n  };\n\nexport default getRandUsers;","import React, { useEffect, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport getRandUsers from '../utils/API'\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport './UserTable.css'\n\nfunction Grid(){\n    const [rowData, setRowData] = useState();\n    const [isLoading, setIsLoading] = useState();\n    \n    function updateRowData(data){\n        var newData = [];\n        data.map((person) => {\n            newData.push({\n                image: person.picture.medium, \n                name: `${person.name.first} ${person.name.last}`, \n                phone: person.phone, \n                email: person.email, \n                dob: person.dob.date.split('T')[0],\n            });\n        });\n        setRowData(newData);\n      };\n\n    useEffect(() => {\n        getRandUsers().then(results => {\n          console.log(results.data.results)\n          updateRowData(results.data.results)\n          console.log('User Data Retrieved')\n        });\n    },[isLoading]);\n    \n    const columnDefs = [\n        {\n            headerName: 'Image', \n            field: 'image', \n            width: 200,\n            sortable: false,\n            cellStyle: {textAlign: 'center'},\n            cellRenderer: ({ value }) => `<img src=${value} />`\n        },\n        {\n            headerName: 'Name', \n            field: 'name',\n             width: 200, \n             filter: true, \n        },\n        {\n            headerName: 'Phone', \n            field: 'phone', \n            width: 200, \n            filter: true, \n        },\n        {\n            headerName: 'Email', \n            field: 'email', \n            width: 200, \n            filter: true, \n        },\n        {\n            headerName: 'Date of Birth', \n            field: 'dob', \n            width: 200, \n            filter: true, \n        },\n    ]\n\n    return (    \n        <div className=\"ag-theme-alpine grid-align\" style={ { width: 1200 } }>\n        <AgGridReact\n            rowData={rowData}\n            columnDefs={columnDefs}\n            defaultColDef={{\n                flex: 1,\n                resizable: true,\n                sortable: true,\n                cellStyle: {whiteSpace: \"normal\"},\n            }}\n            rowHeight={76}\n            domLayout={'autoHeight'}\n            >\n        </AgGridReact>\n    </div>\n    );\n};\n\nexport default Grid;","import React from 'react';\nimport './Header.css'\n\nfunction Header(){\n\n\n    return (    \n        <div className=\"header\">\n            <h1>User Directory</h1>\n            <p>Click on desired column to sort, click on &#9776; icon to filter by column</p>\n        </div>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport UserTable from \"./components/UserTable\"\nimport Header from \"./components/Header\"\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <UserTable />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}